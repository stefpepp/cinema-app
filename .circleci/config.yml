# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

executors:
  app-executor:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo

aliases:
  - &show-current-branch-name
    run:
      name: Show current branch
          command: echo ${CIRCLE_BRANCH}
  - &restore-cache
    restore_cache:
          keys:
            - app-{{ checksum "package.json" }}
            - app-
  - &install-dependencies
    run:
          name: Install dependencies
          command: npm install
  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package.json"}}
  - &install-aws-cli
    run:
      name: Installing AWS CLI
      working_directory: /
      command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
        sudo apt-get install -y python3-pip python-dev build-essential
  - &build-project
    run:
      name: Build Project
      command: |
        npm install
        npm run build
        cd build
        zip ../build.zip -r * .[^.]*
        echo "Build successfu"


jobs:
  build:
    executor: app-executor
    steps:
      - checkout 
      - *show-current-branch-name
      - *restore-cache
      - *install-dependencies
      - *save-cache

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PROD} --delete
            elsif [ "${CIRCLE_BRANCH}" == "staging"]
              --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_DEV} --delete
            fi

  deploy-to-aws-cloudfront:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS CLOUDFRONT
          command: |
            aws configure set preview.cloudfront
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws cloudfront create-invalidation --distribution-id ${DISTRIBUTION_PROD_ID} --paths/\*
            elsif [ "${CIRCLE_BRANCH}" == "staging"]
              aws cloudfront create-invalidation --distribution-id ${DISTRIBUTION_STAGING_ID} --paths/\*
            else
              aws cloudfront create-invalidation --distribution-id ${DISTRIBUTION_DEV_ID} --paths/\*
            fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build 
          filters:
            branches:
              only:
                - development
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - development
                - staging
                - master